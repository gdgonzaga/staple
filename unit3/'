<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>Pentagon demo</title>
    <style>
      body {
        margin: 0;
      }
    </style>
    <script type="importmap">
      {
        "imports": {
          "three": "https://cdn.jsdelivr.net/npm/three@v0.170.0/build/three.module.js",
          "three/addons/": "https://cdn.jsdelivr.net/npm/three@v0.170.0/examples/jsm/"
        }
      }
    </script>
  </head>
  <body>
    <script src="http://uopeopleweb.com/js/Detector.js"></script>
    <script type="module">
      // document/scene setup
      import * as THREE from 'three';

      // Put screen size in variables for easy access
      const windowHeight = window.innerHeight;
      const windowWidth = window.innerWidth;

      const renderer = new THREE.WebGLRenderer();
      renderer.setSize(windowWidth, windowHeight);
      document.body.appendChild(renderer.domElement);
      const scene = new THREE.Scene();

      // camera setup
      const camera = new THREE.PerspectiveCamera(75, 16 / 9, 0.1, 1000);
      camera.position.z = 100;

      // START OF CUSTOM CODE

      // LIGHTS
      // Directional light
      var direcitonalLight = new THREE.DirectionalLight(0xffffff, 4.0)

      // Put the light in an angle
      direcitonalLight.position.set( -2, 2, 1 );
      direcitonalLight.target.position.set(0, 0, 0);

      // Make sure it is added to the scene
      scene.add(direcitonalLight);
      scene.add(direcitonalLight.target);

      // Add ambient light to soften shadows
      var ambientLight = new THREE.AmbientLight(0x555555);
      scene.add(ambientLight);

      // Create Phong material that can react with lights
      const material = new THREE.MeshPhongMaterial({ color: 0x0000ff });

      // Add object
      var sphereGeom = new THREE.SphereGeometry(15, 32, 32, 0, Math.Pi)
      var sphere = new THREE.Mesh(sphereGeom, material);
      scene.add(sphere);

      // Put sphere bounce directions in variables
      var directionX = 1.0;
      var directionY = 1.0;

      // Call animation loop
      function animate() {
      console.log(sphere.position.x)
        if (sphere.position.x > windowWidth/2) {
          directionX = -1.0;
        }

        if (sphere.position.y > windowHeight/2) {
          directionY = -1.0;
        }

        sphere.position.x += directionX;
        sphere.position.y += directionY;
        renderer.render(scene, camera);
      }
      renderer.setAnimationLoop(animate);
      // END OF CUSTOM CODE
    </script>
  </body>
</html>
